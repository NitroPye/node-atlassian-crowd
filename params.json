{"body":"# Atlassian Crowd Library for node.js #\r\nA node.js module for interacting with the Atlassian Crowd.\r\n\r\nProvides the ability to Add, Remove, and Manage Users and Groups as well as SSO functionality.\r\n\r\n## Getting Started ##\r\nIn order to use this module you will first need to configure an application in Atlassian Crowd and Configure the Remote IP Address.\r\n\r\nSee the [Atlassian Crowd Documentation (Adding an Application)](https://confluence.atlassian.com/display/CROWD/Adding+an+Application#AddinganApplication-add) for assistance.\r\n\r\n## Usage ##\r\n```javascript\r\nvar AtlassianCrowd = require('atlassian-crowd');\r\nvar options = {\r\n  \"crowd\": {\r\n    \"base\": \"http://localhost\", \r\n    \"port\": 8080\r\n  },\r\n  \"application\": {\r\n    \"name\": \"my application\",\r\n    \"password\": \"pass123\"\r\n  }\r\n}\r\n\r\nvar crowd = new AtlassianCrowd(options);\r\n```\r\n\r\n### Options ###\r\nIf you do not know these please ask your systems administrator.\r\n\r\n`application.name` Application name as configured in Atlassian Crowd  \r\n`application.password` Application name as configured in Atlassian Crowd  \r\n`crowd.baseurl` Atlassian Crowd Base URL  \r\n`crowd.port` Atlassian Crowd Port  \r\n\r\n## API ##\r\n\r\n### Testing Configuration and Connectivity ###\r\nA simple function to check connectivity to Atlassian Crowd.\r\n\r\nping(callback)\r\n\r\n* callback Function (err, res)\r\n\r\n```javascript\r\ncrowd.ping(function (err, res) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(res)\r\n  }\r\n});\r\n```\r\n\r\n### User Related Functions ###\r\nHere you can find utilities for Managing, Creating, Removing, Users as well as Changing Passwords, and Basic Authentication (NON SSO).\r\n\r\n#### Finding a User by Username ####\r\nuser.find(userrname, callback)\r\n\r\n* username String\r\n* callback Function (err, res)\r\n\r\n```javascript\r\ncrowd.user.find('user', function(err, res) {\r\n  if(err) { \r\n    throw err;\r\n   }\r\n  else {\r\n    console.log(res);\r\n  }\r\n});\r\n```\r\n\r\n#### Checking if User is Active ####\r\nuser.active(username, callback)  \r\n\r\n* username String\r\n* callback Function (err, res)\r\n\r\n```javascript\r\ncrowd.user.active('user', function (err, res) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(res.toString());\r\n  }\r\n});\r\n```\r\n\r\n#### Creating a User ####\r\nuser.create(firstname, lastname, displayname, email, username, password, callback)  \r\n\r\n* firstname String\r\n* lastname String\r\n* displayname String\r\n* email String\r\n* username String\r\n* password String\r\n* callback Function (err)\r\n\r\n```javascript\r\ncrowd.user.create('Test', 'User', 'Test User', 'test@foo.bar', 'testuser', 'abc123', function(err) {\r\n  if(err) { \r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(\"Success\")\r\n  }\r\n});\r\n```\r\n\r\n#### Removing a User ####\r\nuser.remove(username, callback)  \r\n\r\n* username String\r\n* callback Function (err)\r\n\r\n```javascript\r\ncrowd.user.remove('testuser', function(err) {\r\n  if(err) { \r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(\"Success\")\r\n  }\r\n});\r\n```\r\n\r\n#### List a Users Group Membership ####\r\nuser.groups(username, callback)  \r\n\r\n* username String\r\n* callback Function (err, res)\r\n\r\n```javascript\r\ncrowd.user.groups('testuser', function (err, res) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(res);\r\n  }\r\n});\r\n```\r\n\r\n#### User Authentication (NON SSO) ####\r\nuser.authenticate(username, password, callback)  \r\n\r\n* username String\r\n* password String\r\n* callback Function (err, res)\r\n\r\n```javascript\r\ncrowd.user.authenticate('testuser', 'abc123', function(err, res) {\r\n  if(err) { \r\n    throw err;\r\n   }\r\n  else {\r\n    console.log(res);\r\n  }\r\n});\r\n```\r\n\r\n#### Changing a Users Password ####\r\nuser.changepassword(username, newpassword)\r\n\r\n* username String\r\n* newpassword String\r\n* callback Function (err)\r\n\r\n```javascript\r\ncrowd.user.changepassword('testuser', 'newpass', function (err) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(\"Success\");\r\n  }\r\n});\r\n```\r\n\r\n### Group Functions ###\r\nHere you can find utilities for Managing, Creating, and Removing Groups.  \r\n\r\n#### Finding a Group ####\r\ngroups.find(groupname, callback)  \r\n\r\n* groupname String\r\n* callback Function (err, res)\r\n\r\n```javascript\r\ncrowd.groups.find('crowd-administrators', function (err, res) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(res);\r\n  }\r\n});\r\n```\r\n\r\n#### Creating a Group ####\r\ngroups.create(name, description, callback)\r\n\r\n* name String\r\n* description String\r\n* callback Function (err)\r\n\r\n```javascript\r\ncrowd.groups.create('test-group', 'Test Description', function(err) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(\"Success\");\r\n  }\r\n});\r\n```\r\n\r\n#### Removing a Group ####\r\ngroups.remove(name, callback)\r\n\r\n* name String\r\n* callback Function (err)\r\n\r\n```javascript\r\ncrowd.groups.remove('test-group', function (err) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(\"Success\");\r\n  }\r\n```\r\n\r\n#### Adding a User to a Group ####\r\ngroups.addmember(username, group, callback)\r\n\r\n* username String\r\n* group String\r\n* callback Function (err)\r\n\r\n```javascript\r\ncrowd.groups.addmember('testuser', 'test-group', function (err) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(\"Success\");\r\n  }\r\n});\r\n```\r\n\r\n#### Removing a User from a Group ####\r\ngroups.removemember(username, group, callback)\r\n\r\n* username String\r\n* group String\r\n* callback Function (err)\r\n\r\n```javascript\r\ncrowd.groups.removemember('testuser', 'test-group', function (err) {\r\n  if(err) {\r\n    throw err;\r\n  }\r\n  else {\r\n    console.log(\"Success\");\r\n  }\r\n});\r\n```\r\n\r\n#### Find the Direct Members of a Group ####\r\n\r\n#### Find the Nested Members of a Group ####\r\n\r\n### Session Functions ###\r\nProvides SSO Functionality\r\n\r\n#### Create a new Session ####\r\n\r\n#### Authenticate ####\r\n\r\n#### Destroy ####\r\n\r\n\r\n\r\n## TODO ##\r\n* Finish Docs\r\n* Update User Profile","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A node.js module for communicating with Atlassian Crowd","name":"node-atlassian-crowd","google":"UA-37124779-1"}